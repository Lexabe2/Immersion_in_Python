# В большой текстовой строке подсчитать количество встречаемых слов и вернуть
# 10 самых частых. Не учитывать знаки препинания и регистр символов.
# За основу возьмите любую статью из википедии или из документации к языку.

txt = '''«Лётчик для Особых Поручений» — сказочная повесть Владислава Крапивина,
первая из цикла «Летящие сказки». Напечатана в журнале «Уральский следопыт» 
в 1973 году с рисунками Е. Стерлиговой, которая впервые иллюстрировала
произведение писателя. Главный герой, пятиклассник Алёшка, попадает в сказку,
чтобы вернуть потерянный кораблик, который он собирается подарить знакомой
девочке на день рождения. Там мальчик встречает лётчика Антошку Тополькова, 
посвятившего свою жизнь служению людям. Антошка летает по разным сказкам 
на маленьком самолёте, выполняя Особые Поручения Главного Диспетчера.
В произведении затрагиваются темы дружбы, одиночества, нравственного выбора. 
Повесть считается программной, в ней у Крапивина появляется идея совместного 
существования обычного и сказочного миров, вводятся основные приемы создания 
авторского хронотопа, впоследствии использованные в других сказочных и 
фантастических произведениях. Мир сказки воплощает детские мечты о 
взаимопонимании. Сказочный город Ветрогорск, напоминающий средневековый 
европейский город, представляет собой авторскую Утопию, прекрасное место 
веселья и детства. Повесть  неоднократно переиздавалась, существуют 
переводы на иностранные языки. языки.'''

class Text:
    def __init__(self, text: str):
        self.text = text

    def popular_words(self):
        signs = ",!«»—.?"
        clear_text = self.text.translate(
            {ord(i): None for i in signs}).lower().split()
        dict_txt = {x: clear_text.count(x) for x in clear_text}
        sort_txt = sorted(dict_txt, key=dict_txt.get, reverse=True)
        return sort_txt[:10]

test = Text(txt)
print(test.popular_words())